{
    "openapi": "3.0.0",
    "info": {
        "title": "School Management API",
        "description": "API Documentation for School Management System",
        "contact": {
            "name": "API Support",
            "email": "oluwaseyiayoola97@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/schools/pending-verification": {
            "get": {
                "tags": [
                    "Admin Verification"
                ],
                "summary": "Get schools pending verification",
                "description": "Get all schools pending verification",
                "operationId": "979fbf8a8234a1ab2369493d1332301e",
                "responses": {
                    "200": {
                        "description": "Schools pending verification",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/schools/{school}/verify": {
            "post": {
                "tags": [
                    "Admin Verification"
                ],
                "summary": "Approve or reject school verification",
                "description": "Approve or reject school verification",
                "operationId": "d8617601043d7a0cbc1b616f355d5d86",
                "parameters": [
                    {
                        "name": "school",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "approve",
                                            "reject"
                                        ]
                                    },
                                    "notes": {
                                        "description": "Optional verification notes",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "School verification updated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/verification/stats": {
            "get": {
                "tags": [
                    "Admin Verification"
                ],
                "summary": "Get verification statistics",
                "description": "Get verification statistics",
                "operationId": "858e9974be245aff941408b616e86ded",
                "responses": {
                    "200": {
                        "description": "Verification statistics"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Mark attendance for students",
                "operationId": "7579b83fb79e37c072f395fe058e7a72",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "class_id",
                                    "date",
                                    "records"
                                ],
                                "properties": {
                                    "class_id": {
                                        "type": "integer"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "records": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "student_id": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "present",
                                                        "absent",
                                                        "late"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendance marked successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register school administrator (email verification required)",
                "operationId": "a718f172ff3ac464d723835815f8fb57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "position"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "admin@school.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Must match the password field",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+2348012345678"
                                    },
                                    "position": {
                                        "description": "School administrator position (accepts various formats: 'Principal', 'vice principal', 'Vice_Principal', etc.)",
                                        "type": "string",
                                        "enum": [
                                            "Principal",
                                            "Owner",
                                            "Director",
                                            "Headmaster",
                                            "Headmistress",
                                            "Administrator",
                                            "Vice Principal",
                                            "Deputy Head",
                                            "Academic Director",
                                            "School Manager"
                                        ],
                                        "example": "Principal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Administrator registered; verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please verify your email."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "requires_email_verification": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "verification_token": {
                                                    "description": "Temporary token for email verification",
                                                    "type": "string",
                                                    "example": "1|abcdef123456"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                },
                                                "position": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected position is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to register user. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login for all user types",
                "description": "Authenticates a user and returns an access token",
                "operationId": "44212a9096e4b09358281e9ec8a0701d",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "profile": {
                                                    "description": "User's profile data based on role (teacher/student/parent)",
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "teacher"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "onboarding_status": {
                                                    "description": "Onboarding status for admin users only",
                                                    "properties": {
                                                        "current_step": {
                                                            "type": "integer",
                                                            "example": 2,
                                                            "nullable": true
                                                        },
                                                        "completed_steps": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "is_complete": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "requires_onboarding": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid credentials"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Email not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please verify your email address before logging in. Check your inbox for the verification link."
                                        },
                                        "errors": {
                                            "properties": {
                                                "requires_email_verification": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "admin@school.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to login. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user (revoke token)",
                "description": "Revokes the current access token, effectively logging out the user",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to logout. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-positions": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get valid administrator positions",
                "description": "Get valid administrator positions for dropdown",
                "operationId": "f88bdea79b98368358daa5b2521a84d6",
                "responses": {
                    "200": {
                        "description": "Valid administrator positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Administrator positions retrieved"
                                        },
                                        "data": {
                                            "properties": {
                                                "positions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "principal"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Principal"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard data",
                "description": "Retrieves key metrics and statistics for the admin dashboard",
                "operationId": "5968da48cceac74e95cc78c0633f5ec7",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard data retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "totals": {
                                                    "properties": {
                                                        "students": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "teachers": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "classes": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "attendance_today": {
                                                    "properties": {
                                                        "present": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "absent": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "late": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 150
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_activities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "attendance"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "New attendance recorded"
                                                            },
                                                            "time": {
                                                                "type": "string",
                                                                "example": "2 hours ago"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to load dashboard data"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verify-otp": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify email with OTP code",
                "description": "Verify email using OTP code",
                "operationId": "5c9e2eb1686665ce73b794fd90c49549",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp_code"
                                ],
                                "properties": {
                                    "otp_code": {
                                        "description": "6-digit verification code",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Resend OTP verification code",
                "description": "Resend OTP verification code to the authenticated user",
                "operationId": "979888f9dcb1d2c0d556b57747b6976d",
                "responses": {
                    "200": {
                        "description": "Verification code sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Too many verification attempts."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/status": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get current onboarding status",
                "description": "Get current onboarding status for the authenticated admin",
                "operationId": "65727296351505541702706c7bdb136e",
                "responses": {
                    "200": {
                        "description": "Onboarding status retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_step": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "completed_steps": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "is_complete": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "school": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/school-profile/step-1": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboarding Step 1: Create/Update school identity",
                "description": "Step 1: Core school identity",
                "operationId": "3924dc52afa3163cca0d1dcf305ea828",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Bright Academy"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Primary"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Our mission..."
                                    },
                                    "logo": {
                                        "description": "School logo image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "School saved"
                    },
                    "403": {
                        "description": "Email not verified or not admin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/school-profile/step-2": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboarding Step 2: Contact info",
                "description": "Step 2: Contact and presence info",
                "operationId": "ca1faabc54c9bcf57e661ff77adc401c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true
                                    },
                                    "accept_terms": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact info saved"
                    },
                    "403": {
                        "description": "Email not verified or not admin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/school-profile/complete": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboarding Step 3: Submit for verification",
                "description": "Step 3: Submit for verification",
                "operationId": "2512c3293dc0240cdd6e435ec1466058",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accept_verification_terms"
                                ],
                                "properties": {
                                    "accept_verification_terms": {
                                        "description": "User must accept that we will contact school for verification",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Submitted for verification"
                    },
                    "403": {
                        "description": "Email not verified or not admin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/verification-status": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Check verification status",
                "description": "Step 4: Verification pending status",
                "operationId": "9932544ba11389f397db86442692ee02",
                "responses": {
                    "200": {
                        "description": "Verification status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "submitted_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "disclaimer": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/parents": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get all parents",
                "operationId": "abe6ec5179e2e92e68f0a9ba04e2f546",
                "responses": {
                    "200": {
                        "description": "List of parents retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parents"
                ],
                "summary": "Create a new parent",
                "operationId": "57663c0f32b6dbcedef06fce4dd35b7e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parent created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/parents/{id}": {
            "get": {
                "tags": [
                    "Parents"
                ],
                "summary": "Get a specific parent",
                "operationId": "a2d43cd6248bb2031ad0e8c4dd2f7f0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parent details retrieved successfully"
                    },
                    "404": {
                        "description": "Parent not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parents"
                ],
                "summary": "Update a parent",
                "operationId": "f3046baf1a317df2085e10909e7832f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parent updated successfully"
                    },
                    "404": {
                        "description": "Parent not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parents"
                ],
                "summary": "Delete a parent",
                "operationId": "884ec861bfcceabc589d141bae933ac5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parent deleted successfully"
                    },
                    "404": {
                        "description": "Parent not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/classes": {
            "get": {
                "tags": [
                    "Classes"
                ],
                "summary": "Get all classes",
                "operationId": "4a6d67909e262c9ad78e82bf15d36d20",
                "responses": {
                    "200": {
                        "description": "Classes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Classes retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "teacher_id": {
                                                        "type": "integer"
                                                    },
                                                    "capacity": {
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Classes"
                ],
                "summary": "Create a new class",
                "operationId": "488ce21f32e2013331ec1d890497e6d0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "grade"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Class 10A"
                                    },
                                    "grade": {
                                        "description": "Grade level (1-12), must be unique",
                                        "type": "integer",
                                        "maximum": 12,
                                        "minimum": 1,
                                        "example": 10
                                    },
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "students": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Class created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Class created successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/classes/{class}": {
            "get": {
                "tags": [
                    "Classes"
                ],
                "summary": "Get a specific class",
                "operationId": "f745c7062655a9fb310dd9c9d604b836",
                "parameters": [
                    {
                        "name": "class",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Class retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Class not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Classes"
                ],
                "summary": "Update a class",
                "operationId": "6208360dc1562dc5de7195f94bdcc432",
                "parameters": [
                    {
                        "name": "class",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "grade": {
                                        "description": "Grade level (1-12), must be unique",
                                        "type": "integer",
                                        "maximum": 12,
                                        "minimum": 1
                                    },
                                    "teacher_id": {
                                        "type": "integer"
                                    },
                                    "capacity": {
                                        "type": "integer"
                                    },
                                    "students": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Class updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Class updated successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Class not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Classes"
                ],
                "summary": "Delete a class",
                "operationId": "14e8af5dd16cc7060dcfc58d2041f8c4",
                "parameters": [
                    {
                        "name": "class",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Class deleted successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Class not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/classes/dropdown-options": {
            "get": {
                "tags": [
                    "Classes"
                ],
                "summary": "Get dropdown options for class forms",
                "operationId": "ae3d51fdac25390cce23ef1ee34088bb",
                "responses": {
                    "200": {
                        "description": "Dropdown options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown options retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "teachers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "students": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "grades": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "integer"
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get all students",
                "description": "Retrieves a list of all students with their user details",
                "operationId": "aa35cf77c58fb69cd09f41b4dd58add2",
                "responses": {
                    "200": {
                        "description": "List of students retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Students retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Student"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve students"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Create a new student",
                "description": "Creates a new student with the provided information and generates a random password",
                "operationId": "502447af27809e10e3bf34001cfe2b78",
                "requestBody": {
                    "description": "Student data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "class_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "student@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1234567890"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2005-01-15"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "123 Main St, City, Country"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "parent_id": {
                                        "description": "ID of the parent if applicable",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "class_id": {
                                        "description": "ID of the class the student will be assigned to (required)",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "student@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "student": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "gender": {
                                                            "type": "string",
                                                            "example": "male"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "generated_password": {
                                                    "type": "string",
                                                    "example": "aBcDeFgH"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "parent_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected parent does not exist."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/students/{id}": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get a specific student",
                "description": "Retrieves detailed information about a specific student including their user details",
                "operationId": "8344d3480c111825f245899c573e30b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StudentWithUser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Update a student",
                "description": "Updates student information including user details",
                "operationId": "59fafdc08cda3846f8135259a5ad8831",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2005-01-15"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student updated successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StudentWithUser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "description": "Deletes a student and their associated user account",
                "operationId": "d03ab48e2e9fbb3adf5dfa9a93431134",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student deleted successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/students/dropdown-options": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get dropdown options for student creation",
                "description": "Returns available options for gender and parent selection",
                "operationId": "b796e924c5cf341596dc4d755c8f729d",
                "responses": {
                    "200": {
                        "description": "Dropdown options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown options retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "genders": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "male"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Male"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "parents": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve dropdown options"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get all subjects",
                "operationId": "034223809d31f97c85e65fb36d1bd29f",
                "responses": {
                    "200": {
                        "description": "Subjects retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subjects retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "created_by": {
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Create a new subject",
                "operationId": "e2c447d20570f559a35f847a6be0b8f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mathematics"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "MATH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject created successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subjects/{subject}": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get a specific subject",
                "operationId": "0a9a527520481d6e6ef9b35959a42520",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subject not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Update a subject",
                "operationId": "042299f1412040b97f79feca92322aa4",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subject updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject updated successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Subject not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Delete a subject",
                "operationId": "42f849ea3ea850b582785a6ceb2691d8",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject deleted successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subject not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subjects/{subject}/assign-to-class": {
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Assign a subject to a class with a teacher",
                "operationId": "2036161d956deec23f5b0e2ec20afcbf",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "class_id",
                                    "teacher_id"
                                ],
                                "properties": {
                                    "class_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subject assigned to class successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject assigned to class successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Subject not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subjects/dropdown-options": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get dropdown options for subject forms",
                "operationId": "382d8c64dc1b015621cca06b024056f6",
                "responses": {
                    "200": {
                        "description": "Dropdown options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown options retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "classes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "teachers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teachers": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get all teachers",
                "description": "Retrieves a list of all teachers with their user details",
                "operationId": "184d1632775acc895c4295a66702c29a",
                "responses": {
                    "200": {
                        "description": "List of teachers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teachers retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Teacher"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve teachers"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Create a new teacher",
                "description": "Creates a new teacher with the provided information and generates a random password",
                "operationId": "949751d138c905b8b80f5e6191438729",
                "requestBody": {
                    "description": "Teacher data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "qualification"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "teacher@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1234567890"
                                    },
                                    "subject_specialty": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Mathematics"
                                    },
                                    "qualification": {
                                        "description": "Teacher's highest educational qualification",
                                        "type": "string",
                                        "enum": [
                                            "High School Diploma",
                                            "Associate Degree",
                                            "Bachelor's Degree",
                                            "Master's Degree",
                                            "Doctorate (Ph.D.)",
                                            "Professional Certification",
                                            "Trade School Diploma",
                                            "Postgraduate Certificate/Diploma",
                                            "Other"
                                        ],
                                        "example": "Master's Degree"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "123 Main St, City, Country"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Teacher created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "teacher@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "teacher": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "subject_specialty": {
                                                            "type": "string",
                                                            "example": "Mathematics"
                                                        },
                                                        "qualification": {
                                                            "type": "string",
                                                            "example": "Master's Degree"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "generated_password": {
                                                    "type": "string",
                                                    "example": "aBcDeFgH"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "qualification": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected qualification is invalid. Valid options are: High School Diploma, Associate Degree, ..."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create teacher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/teachers/{id}": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get a specific teacher",
                "description": "Retrieves detailed information about a specific teacher including their user details",
                "operationId": "f289578ee2709fd0f758a4f895cd91e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the teacher to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeacherWithUser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve teacher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Update a teacher",
                "description": "Updates the specified teacher with the provided information",
                "operationId": "e56e1d4798971811ebf91574b6f3444c",
                "parameters": [
                    {
                        "name": "teacher",
                        "in": "path",
                        "description": "ID of the teacher to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Teacher data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Teacher's full name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Teacher's email address (must be unique)",
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated.teacher@example.com"
                                    },
                                    "phone": {
                                        "description": "Teacher's contact number",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1234567890"
                                    },
                                    "subject_specialty": {
                                        "description": "Teacher's subject specialty",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Advanced Mathematics"
                                    },
                                    "qualification": {
                                        "description": "Teacher's highest educational qualification",
                                        "type": "string",
                                        "enum": [
                                            "High School Diploma",
                                            "Associate Degree",
                                            "Bachelor's Degree",
                                            "Master's Degree",
                                            "Doctorate (Ph.D.)",
                                            "Professional Certification",
                                            "Trade School Diploma",
                                            "Postgraduate Certificate/Diploma",
                                            "Other"
                                        ],
                                        "example": "Doctorate (Ph.D.)"
                                    },
                                    "date_of_birth": {
                                        "description": "Teacher's date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1985-05-15"
                                    },
                                    "address": {
                                        "description": "Teacher's full address",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "456 University Ave, City, Country"
                                    },
                                    "gender": {
                                        "description": "Teacher's gender",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Teacher updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeacherWithUser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No data provided for update"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update teacher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete a teacher",
                "description": "Permanently deletes a teacher and their associated user account",
                "operationId": "df6d3fe7560e0c5914b17ccd7769dbeb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the teacher to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete teacher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/teachers/dropdown-options": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get dropdown options for teacher creation",
                "description": "Retrieves available options for subject specialties and qualifications",
                "operationId": "a3584e132f2e207a744df07a71bf2b9a",
                "responses": {
                    "200": {
                        "description": "Dropdown options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dropdown options retrieved successfully"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "subject_specialties": {
                                                    "type": "object",
                                                    "example": {
                                                        "Mathematics": "Mathematics",
                                                        "English Language": "English Language",
                                                        "Science": "Science"
                                                    },
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "qualifications": {
                                                    "type": "object",
                                                    "example": {
                                                        "Bachelor's Degree": "Bachelor's Degree",
                                                        "Master's Degree": "Master's Degree",
                                                        "Doctorate (Ph.D.)": "Doctorate (Ph.D.)"
                                                    },
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Student": {
                "title": "Student",
                "description": "Student model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "2005-01-15"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StudentWithUser": {
                "title": "Student with User Details",
                "description": "Student model with associated user information",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Student"
                    },
                    {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Teacher": {
                "required": [
                    "user_id",
                    "qualification"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "subject_specialty": {
                        "type": "string",
                        "example": "Mathematics",
                        "nullable": true
                    },
                    "qualification": {
                        "type": "string",
                        "enum": [
                            "High School Diploma",
                            "Associate Degree",
                            "Bachelor's Degree",
                            "Master's Degree",
                            "Doctorate (Ph.D.)",
                            "Professional Certification",
                            "Trade School Diploma",
                            "Postgraduate Certificate/Diploma",
                            "Other"
                        ],
                        "example": "Master's Degree"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-05-15",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City, State",
                        "nullable": true
                    },
                    "religion": {
                        "type": "string",
                        "enum": [
                            "Christian",
                            "Muslim",
                            "Other"
                        ],
                        "example": "Christian",
                        "nullable": true
                    },
                    "salary": {
                        "type": "number",
                        "format": "float",
                        "example": 50000,
                        "nullable": true
                    },
                    "join_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-09-01",
                        "nullable": true
                    },
                    "picture": {
                        "type": "string",
                        "example": "teachers/john_doe.jpg",
                        "nullable": true
                    },
                    "experience_years": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TeacherWithUser": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Teacher"
                    },
                    {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "teacher",
                            "student",
                            "parent"
                        ],
                        "example": "teacher"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin Verification",
            "description": "Admin Verification"
        },
        {
            "name": "Attendance",
            "description": "Attendance"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Email Verification",
            "description": "Email Verification"
        },
        {
            "name": "Onboarding",
            "description": "Onboarding"
        },
        {
            "name": "Parents",
            "description": "Parents"
        },
        {
            "name": "Classes",
            "description": "Classes"
        },
        {
            "name": "Students",
            "description": "Students"
        },
        {
            "name": "Subjects",
            "description": "Subjects"
        },
        {
            "name": "Teachers",
            "description": "Teachers"
        }
    ]
}